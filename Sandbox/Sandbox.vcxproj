<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug OpenGL|x64">
      <Configuration>Debug OpenGL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug Vulkan|x64">
      <Configuration>Debug Vulkan</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release OpenGL|x64">
      <Configuration>Release OpenGL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release Vulkan|x64">
      <Configuration>Release Vulkan</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Production OpenGL|x64">
      <Configuration>Production OpenGL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Production Vulkan|x64">
      <Configuration>Production Vulkan</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{F4C124E3-60A1-A37E-69B9-2E55D5170AE0}</ProjectGuid>
    <IgnoreWarnCompileDuplicatedFilename>true</IgnoreWarnCompileDuplicatedFilename>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>Sandbox</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug OpenGL|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug Vulkan|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release OpenGL|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release Vulkan|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Production OpenGL|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Production Vulkan|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug OpenGL|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug Vulkan|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release OpenGL|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release Vulkan|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Production OpenGL|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Production Vulkan|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug OpenGL|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>..\bin\Debug-OpenGL-windows-x86_64\Sandbox\</OutDir>
    <IntDir>..\bin-int\Debug-OpenGL-windows-x86_64\Sandbox\</IntDir>
    <TargetName>Sandbox</TargetName>
    <TargetExt>.exe</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug Vulkan|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>..\bin\Debug-Vulkan-windows-x86_64\Sandbox\</OutDir>
    <IntDir>..\bin-int\Debug-Vulkan-windows-x86_64\Sandbox\</IntDir>
    <TargetName>Sandbox</TargetName>
    <TargetExt>.exe</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release OpenGL|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\bin\Release-OpenGL-windows-x86_64\Sandbox\</OutDir>
    <IntDir>..\bin-int\Release-OpenGL-windows-x86_64\Sandbox\</IntDir>
    <TargetName>Sandbox</TargetName>
    <TargetExt>.exe</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release Vulkan|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\bin\Release-Vulkan-windows-x86_64\Sandbox\</OutDir>
    <IntDir>..\bin-int\Release-Vulkan-windows-x86_64\Sandbox\</IntDir>
    <TargetName>Sandbox</TargetName>
    <TargetExt>.exe</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Production OpenGL|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\bin\Production-OpenGL-windows-x86_64\Sandbox\</OutDir>
    <IntDir>..\bin-int\Production-OpenGL-windows-x86_64\Sandbox\</IntDir>
    <TargetName>Sandbox</TargetName>
    <TargetExt>.exe</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Production Vulkan|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\bin\Production-Vulkan-windows-x86_64\Sandbox\</OutDir>
    <IntDir>..\bin-int\Production-Vulkan-windows-x86_64\Sandbox\</IntDir>
    <TargetName>Sandbox</TargetName>
    <TargetExt>.exe</TargetExt>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug OpenGL|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>ENGINE_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>src;..\Engine\src;..\Engine\vendor\spdlog\include;..\Engine\vendor\sdl2\include\sdl2;..\Engine\vendor\rttr\include;..\Engine\vendor\mono\include\mono-2.0;..\Engine\vendor\gl3w;..\Engine\vendor\ImGui;vendor\rpj;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
      <Optimization>Disabled</Optimization>
      <MinimalRebuild>false</MinimalRebuild>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>opengl32.lib;SDL2.lib;SDL2main.lib;SDL2test.lib;mono-2.0-sgen.lib;MonoPosixHelper.lib;rttr_core_d.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>..\Engine\vendor\sdl2\lib\x64;..\Engine\vendor\rttr\lib;..\Engine\vendor\mono\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST $(SolutionDir)Engine\vendor\sdl2\lib\x64\SDL2.dll\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\sdl2\lib\x64\SDL2.dll ..\bin\Debug-OpenGL-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\sdl2\lib\x64\SDL2.dll ..\bin\Debug-OpenGL-windows-x86_64\Sandbox &gt; nul)
IF EXIST $(SolutionDir)Engine\vendor\mono\lib\mono\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\mono\lib\mono ..\bin\Debug-OpenGL-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\mono\lib\mono ..\bin\Debug-OpenGL-windows-x86_64\Sandbox &gt; nul)
IF EXIST $(SolutionDir)Engine\vendor\mono\dll\mono-2.0-sgen.dll\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\mono\dll\mono-2.0-sgen.dll ..\bin\Debug-OpenGL-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\mono\dll\mono-2.0-sgen.dll ..\bin\Debug-OpenGL-windows-x86_64\Sandbox &gt; nul)
IF EXIST $(SolutionDir)Engine\vendor\rttr\dll\rttr_core_d.dll\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\rttr\dll\rttr_core_d.dll ..\bin\Debug-OpenGL-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\rttr\dll\rttr_core_d.dll ..\bin\Debug-OpenGL-windows-x86_64\Sandbox &gt; nul)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug Vulkan|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>ENGINE_PLATFORM_WINDOWS;_CRT_SECURE_NO_WARNINGS;ENGINE_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>src;..\Engine\src;..\Engine\vendor\spdlog\include;..\Engine\vendor\sdl2\include\sdl2;..\Engine\vendor\rttr\include;..\Engine\vendor\mono\include\mono-2.0;..\Engine\vendor\gl3w;..\Engine\vendor\ImGui;vendor\rpj;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
      <Optimization>Disabled</Optimization>
      <MinimalRebuild>false</MinimalRebuild>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>opengl32.lib;SDL2.lib;SDL2main.lib;SDL2test.lib;mono-2.0-sgen.lib;MonoPosixHelper.lib;rttr_core_d.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>..\Engine\vendor\sdl2\lib\x64;..\Engine\vendor\rttr\lib;..\Engine\vendor\mono\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST $(SolutionDir)Engine\vendor\sdl2\lib\x64\SDL2.dll\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\sdl2\lib\x64\SDL2.dll ..\bin\Debug-Vulkan-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\sdl2\lib\x64\SDL2.dll ..\bin\Debug-Vulkan-windows-x86_64\Sandbox &gt; nul)
IF EXIST $(SolutionDir)Engine\vendor\mono\lib\mono\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\mono\lib\mono ..\bin\Debug-Vulkan-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\mono\lib\mono ..\bin\Debug-Vulkan-windows-x86_64\Sandbox &gt; nul)
IF EXIST $(SolutionDir)Engine\vendor\mono\dll\mono-2.0-sgen.dll\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\mono\dll\mono-2.0-sgen.dll ..\bin\Debug-Vulkan-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\mono\dll\mono-2.0-sgen.dll ..\bin\Debug-Vulkan-windows-x86_64\Sandbox &gt; nul)
IF EXIST $(SolutionDir)Engine\vendor\rttr\dll\rttr_core_d.dll\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\rttr\dll\rttr_core_d.dll ..\bin\Debug-Vulkan-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\rttr\dll\rttr_core_d.dll ..\bin\Debug-Vulkan-windows-x86_64\Sandbox &gt; nul)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release OpenGL|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>ENGINE_RELEASE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>src;..\Engine\src;..\Engine\vendor\spdlog\include;..\Engine\vendor\sdl2\include\sdl2;..\Engine\vendor\rttr\include;..\Engine\vendor\mono\include\mono-2.0;..\Engine\vendor\gl3w;..\Engine\vendor\ImGui;vendor\rpj;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>opengl32.lib;SDL2.lib;SDL2main.lib;SDL2test.lib;mono-2.0-sgen.lib;MonoPosixHelper.lib;rttr_core.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>..\Engine\vendor\sdl2\lib\x64;..\Engine\vendor\rttr\lib;..\Engine\vendor\mono\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST $(SolutionDir)Engine\vendor\sdl2\lib\x64\SDL2.dll\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\sdl2\lib\x64\SDL2.dll ..\bin\Release-OpenGL-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\sdl2\lib\x64\SDL2.dll ..\bin\Release-OpenGL-windows-x86_64\Sandbox &gt; nul)
IF EXIST $(SolutionDir)Engine\vendor\mono\lib\mono\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\mono\lib\mono ..\bin\Release-OpenGL-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\mono\lib\mono ..\bin\Release-OpenGL-windows-x86_64\Sandbox &gt; nul)
IF EXIST $(SolutionDir)Engine\vendor\mono\dll\mono-2.0-sgen.dll\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\mono\dll\mono-2.0-sgen.dll ..\bin\Release-OpenGL-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\mono\dll\mono-2.0-sgen.dll ..\bin\Release-OpenGL-windows-x86_64\Sandbox &gt; nul)
IF EXIST $(SolutionDir)Engine\vendor\rttr\dll\rttr_core.dll\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\rttr\dll\rttr_core.dll ..\bin\Release-OpenGL-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\rttr\dll\rttr_core.dll ..\bin\Release-OpenGL-windows-x86_64\Sandbox &gt; nul)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release Vulkan|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>ENGINE_PLATFORM_WINDOWS;_CRT_SECURE_NO_WARNINGS;ENGINE_RELEASE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>src;..\Engine\src;..\Engine\vendor\spdlog\include;..\Engine\vendor\sdl2\include\sdl2;..\Engine\vendor\rttr\include;..\Engine\vendor\mono\include\mono-2.0;..\Engine\vendor\gl3w;..\Engine\vendor\ImGui;vendor\rpj;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>opengl32.lib;SDL2.lib;SDL2main.lib;SDL2test.lib;mono-2.0-sgen.lib;MonoPosixHelper.lib;rttr_core.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>..\Engine\vendor\sdl2\lib\x64;..\Engine\vendor\rttr\lib;..\Engine\vendor\mono\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST $(SolutionDir)Engine\vendor\sdl2\lib\x64\SDL2.dll\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\sdl2\lib\x64\SDL2.dll ..\bin\Release-Vulkan-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\sdl2\lib\x64\SDL2.dll ..\bin\Release-Vulkan-windows-x86_64\Sandbox &gt; nul)
IF EXIST $(SolutionDir)Engine\vendor\mono\lib\mono\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\mono\lib\mono ..\bin\Release-Vulkan-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\mono\lib\mono ..\bin\Release-Vulkan-windows-x86_64\Sandbox &gt; nul)
IF EXIST $(SolutionDir)Engine\vendor\mono\dll\mono-2.0-sgen.dll\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\mono\dll\mono-2.0-sgen.dll ..\bin\Release-Vulkan-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\mono\dll\mono-2.0-sgen.dll ..\bin\Release-Vulkan-windows-x86_64\Sandbox &gt; nul)
IF EXIST $(SolutionDir)Engine\vendor\rttr\dll\rttr_core.dll\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\rttr\dll\rttr_core.dll ..\bin\Release-Vulkan-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\rttr\dll\rttr_core.dll ..\bin\Release-Vulkan-windows-x86_64\Sandbox &gt; nul)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Production OpenGL|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>ENGINE_PRODUCTION;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>src;..\Engine\src;..\Engine\vendor\spdlog\include;..\Engine\vendor\sdl2\include\sdl2;..\Engine\vendor\rttr\include;..\Engine\vendor\mono\include\mono-2.0;..\Engine\vendor\gl3w;..\Engine\vendor\ImGui;vendor\rpj;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>opengl32.lib;SDL2.lib;SDL2main.lib;SDL2test.lib;mono-2.0-sgen.lib;MonoPosixHelper.lib;rttr_core.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>..\Engine\vendor\sdl2\lib\x64;..\Engine\vendor\rttr\lib;..\Engine\vendor\mono\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST $(SolutionDir)Engine\vendor\sdl2\lib\x64\SDL2.dll\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\sdl2\lib\x64\SDL2.dll ..\bin\Production-OpenGL-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\sdl2\lib\x64\SDL2.dll ..\bin\Production-OpenGL-windows-x86_64\Sandbox &gt; nul)
IF EXIST $(SolutionDir)Engine\vendor\mono\lib\mono\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\mono\lib\mono ..\bin\Production-OpenGL-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\mono\lib\mono ..\bin\Production-OpenGL-windows-x86_64\Sandbox &gt; nul)
IF EXIST $(SolutionDir)Engine\vendor\mono\dll\mono-2.0-sgen.dll\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\mono\dll\mono-2.0-sgen.dll ..\bin\Production-OpenGL-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\mono\dll\mono-2.0-sgen.dll ..\bin\Production-OpenGL-windows-x86_64\Sandbox &gt; nul)
IF EXIST $(SolutionDir)Engine\vendor\rttr\dll\rttr_core.dll\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\rttr\dll\rttr_core.dll ..\bin\Production-OpenGL-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\rttr\dll\rttr_core.dll ..\bin\Production-OpenGL-windows-x86_64\Sandbox &gt; nul)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Production Vulkan|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>ENGINE_PLATFORM_WINDOWS;_CRT_SECURE_NO_WARNINGS;ENGINE_PRODUCTION;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>src;..\Engine\src;..\Engine\vendor\spdlog\include;..\Engine\vendor\sdl2\include\sdl2;..\Engine\vendor\rttr\include;..\Engine\vendor\mono\include\mono-2.0;..\Engine\vendor\gl3w;..\Engine\vendor\ImGui;vendor\rpj;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>opengl32.lib;SDL2.lib;SDL2main.lib;SDL2test.lib;mono-2.0-sgen.lib;MonoPosixHelper.lib;rttr_core.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>..\Engine\vendor\sdl2\lib\x64;..\Engine\vendor\rttr\lib;..\Engine\vendor\mono\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST $(SolutionDir)Engine\vendor\sdl2\lib\x64\SDL2.dll\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\sdl2\lib\x64\SDL2.dll ..\bin\Production-Vulkan-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\sdl2\lib\x64\SDL2.dll ..\bin\Production-Vulkan-windows-x86_64\Sandbox &gt; nul)
IF EXIST $(SolutionDir)Engine\vendor\mono\lib\mono\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\mono\lib\mono ..\bin\Production-Vulkan-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\mono\lib\mono ..\bin\Production-Vulkan-windows-x86_64\Sandbox &gt; nul)
IF EXIST $(SolutionDir)Engine\vendor\mono\dll\mono-2.0-sgen.dll\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\mono\dll\mono-2.0-sgen.dll ..\bin\Production-Vulkan-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\mono\dll\mono-2.0-sgen.dll ..\bin\Production-Vulkan-windows-x86_64\Sandbox &gt; nul)
IF EXIST $(SolutionDir)Engine\vendor\rttr\dll\rttr_core.dll\ (xcopy /Q /E /Y /I $(SolutionDir)Engine\vendor\rttr\dll\rttr_core.dll ..\bin\Production-Vulkan-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)Engine\vendor\rttr\dll\rttr_core.dll ..\bin\Production-Vulkan-windows-x86_64\Sandbox &gt; nul)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="src\Editor\LoggingView.h" />
    <ClInclude Include="src\Editor\Editor.h" />
    <ClInclude Include="src\Editor\EditorFileGroup.h" />
    <ClInclude Include="src\Editor\EditorObjectGroup.h" />
    <ClInclude Include="src\Editor\HeirarchyView.h" />
    <ClInclude Include="src\Editor\InspectorView.h" />
    <ClInclude Include="src\Editor\ProjectFolderView.h" />
    <ClInclude Include="src\Editor\ProjectRootView.h" />
    <ClInclude Include="src\testclass.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="src\Editor\LoggingView.cpp" />
    <ClCompile Include="src\Editor\Editor.cpp" />
    <ClCompile Include="src\Editor\EditorFileGroup.cpp" />
    <ClCompile Include="src\Editor\EditorObjectGroup.cpp" />
    <ClCompile Include="src\Editor\HeirarchyView.cpp" />
    <ClCompile Include="src\Editor\InspectorView.cpp" />
    <ClCompile Include="src\Editor\ProjectFolderView.cpp" />
    <ClCompile Include="src\Editor\ProjectRootView.cpp" />
    <ClCompile Include="src\SandboxApp.cpp" />
    <ClCompile Include="src\testclass.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Engine\Engine.vcxproj">
      <Project>{DBC7D3B0-C769-FE86-B024-12DB9C6585D7}</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>